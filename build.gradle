apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'application'

version '0.2.2'

mainClassName = 'org.dsa.iot.calendar.Main'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url 'https://repo.sdc-automation.se/releases'
        credentials {
            username = System.getenv("SDC_REPO_USER")
            password = System.getenv("SDC_REPO_USER_TOKEN")
        }
    }
    mavenCentral()

    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }

    maven {
        url "https://raw.githubusercontent.com/caldav4j/maven/master/repo/"
    }
}

dependencies {
    // DSLink
    compile 'org.iot-dsa:dslink:0.17.2'
    compile 'org.iot-dsa:commons:0.17.2'
    compile 'org.iot-dsa:historian:0.17.2'

    // CalDAV support
    compile 'org.osaf:caldav4j:0.8-SNAPSHOT'
    compile 'com.fasterxml.uuid:java-uuid-generator:3.1.4'

    // Google Calendar support
    compile 'com.google.api-client:google-api-client-java6:1.22.0'
    compile 'com.google.apis:google-api-services-calendar:v3-rev249-1.22.0'

    // Exchange Web Services Support
    compile 'com.microsoft.ews-java-api:ews-java-api:2.0'
    compile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.5.2'
}

apply plugin: 'checkstyle'
checkstyle {
    configFile = file("${project.rootDir}/checkstyle/checkstyle.xml")
    toolVersion = '6.17'
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

run {
    args System.getProperty("exec.args", "").split()
    workingDir project.buildDir
}

applicationDistribution.from new File(project.projectDir, "/dslink.json")
